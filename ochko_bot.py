from telegram import Update, WebAppInfo
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
import json
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = "7566902664:AAEp6CNE8lEpSTZ6mThIJdqMCuIauThDXRk"  # –ü–æ–ª—É—á–∏—Ç–µ —É @BotFather
GAME_URL = "https://bastreet.github.io/ochko/"  # URL –≤–∞—à–µ–π –∏–≥—Ä—ã –Ω–∞ GitHub Pages

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ—á–∫–æ!",
        reply_markup={
            "inline_keyboard": [[
                {
                    "text": "–ù–∞—á–∞—Ç—å –∏–≥—Ä—É", 
                    "web_app": WebAppInfo(url=GAME_URL)
                }
            ]]
        }
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∏–≥—Ä—ã
async def handle_webapp_data(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        # –ü–∞—Ä—Å–∏–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –∏–≥—Ä—ã
        data = json.loads(update.effective_message.web_app_data.data)
        score = data.get("score", 0)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        await update.message.reply_text(
            f"üèÜ –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {score} –æ—á–∫–æ–≤!",
            reply_markup={
                "inline_keyboard": [[
                    {
                        "text": "–ò–≥—Ä–∞—Ç—å –µ—â—ë —Ä–∞–∑", 
                        "web_app": WebAppInfo(url=GAME_URL)
                    }
                ]]
            }
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        await update.message.reply_text("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä—ã")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    app = Application.builder().token(BOT_TOKEN).build()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handle_webapp_data))
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    app.run_polling()

if __name__ == "__main__":
    main()
